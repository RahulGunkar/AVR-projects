
TCS230_coloursensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004f6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000054a  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000080  00000000  00000000  0000057a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000591  00000000  00000000  000005fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000002dc  00000000  00000000  00000b8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000004d8  00000000  00000000  00000e67  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000108  00000000  00000000  00001340  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000024f  00000000  00000000  00001448  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000317  00000000  00000000  00001697  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000060  00000000  00000000  000019ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	29 d0       	rcall	.+82     	; 0xec <main>
  9a:	2b c2       	rjmp	.+1110   	; 0x4f2 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <TCSMeasure>:

uint32_t TCSMeasure()
{
	//If the function is entered when the level on OUT line was low
	//Then wait for it to become high.
	if(bit_is_clear(PINA,PA1))
  9e:	c9 99       	sbic	0x19, 1	; 25
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <TCSMeasure+0x8>
	{
		while(bit_is_clear(PINA,PA1));   //Wait for rising edge
  a2:	c9 9b       	sbis	0x19, 1	; 25
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <TCSMeasure+0x4>
	}


	while(bit_is_set(PINA,PA1));   //Wait for falling edge
  a6:	c9 99       	sbic	0x19, 1	; 25
  a8:	fe cf       	rjmp	.-4      	; 0xa6 <TCSMeasure+0x8>

	TCNT1=0x0000;//Reset Counter
  aa:	1d bc       	out	0x2d, r1	; 45
  ac:	1c bc       	out	0x2c, r1	; 44

	TCCR1B=(1<<CS10); //Prescaler = F_CPU/1 (Start Counting)
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	8e bd       	out	0x2e, r24	; 46

	while(bit_is_clear(PINA,PA1));   //Wait for rising edge
  b2:	c9 9b       	sbis	0x19, 1	; 25
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <TCSMeasure+0x14>

	//Stop Timer
	TCCR1B=0x00;
  b6:	1e bc       	out	0x2e, r1	; 46

	return ((float)4000000UL/TCNT1);
  b8:	6c b5       	in	r22, 0x2c	; 44
  ba:	7d b5       	in	r23, 0x2d	; 45
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	4c d1       	rcall	.+664    	; 0x35a <__floatunsisf>
  c2:	9b 01       	movw	r18, r22
  c4:	ac 01       	movw	r20, r24
  c6:	60 e0       	ldi	r22, 0x00	; 0
  c8:	74 e2       	ldi	r23, 0x24	; 36
  ca:	84 e7       	ldi	r24, 0x74	; 116
  cc:	9a e4       	ldi	r25, 0x4A	; 74
  ce:	ac d0       	rcall	.+344    	; 0x228 <__divsf3>
  d0:	18 c1       	rjmp	.+560    	; 0x302 <__fixunssfsi>

}
  d2:	08 95       	ret

000000d4 <colour_config>:

colour_config()
{
	DDRC =0xFF;
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	84 bb       	out	0x14, r24	; 20
	PORTC=0x0F;
  d8:	8f e0       	ldi	r24, 0x0F	; 15
  da:	85 bb       	out	0x15, r24	; 21
	DDRA|=(1<<PA0);
  dc:	d0 9a       	sbi	0x1a, 0	; 26
	//	DDRD|=(1<<PD0);
	DDRA&=~(1<<PA1);
  de:	d1 98       	cbi	0x1a, 1	; 26
	//DDRA|=(1<<PA0);
	USART_Init(12,0);
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	8c e0       	ldi	r24, 0x0C	; 12
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	38 d0       	rcall	.+112    	; 0x158 <USART_Init>
	//USART_TransmitNumber(11);
	PORTA|=(1<<PA0);
  e8:	d8 9a       	sbi	0x1b, 0	; 27
	//PORTD|=(1<<PDO);
	
}
  ea:	08 95       	ret

000000ec <main>:


int main(void)
{
	colour_config();
  ec:	f3 df       	rcall	.-26     	; 0xd4 <colour_config>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ee:	8f e1       	ldi	r24, 0x1F	; 31
  f0:	9e e4       	ldi	r25, 0x4E	; 78
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0x6>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0xc>
  f8:	00 00       	nop
	{
		
		uint32_t r;

		_delay_ms(10);
		r=TCSMeasure();
  fa:	d1 df       	rcall	.-94     	; 0x9e <TCSMeasure>
  fc:	6b 01       	movw	r12, r22
  fe:	7c 01       	movw	r14, r24
 100:	8f e1       	ldi	r24, 0x1F	; 31
 102:	9e e4       	ldi	r25, 0x4E	; 78
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <main+0x18>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x1e>
 10a:	00 00       	nop
		
		_delay_ms(10);
		r+=TCSMeasure();
 10c:	c8 df       	rcall	.-112    	; 0x9e <TCSMeasure>
 10e:	c6 0e       	add	r12, r22
 110:	d7 1e       	adc	r13, r23
 112:	e8 1e       	adc	r14, r24
 114:	f9 1e       	adc	r15, r25
 116:	8f e1       	ldi	r24, 0x1F	; 31
 118:	9e e4       	ldi	r25, 0x4E	; 78
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <main+0x2e>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x34>
 120:	00 00       	nop

		_delay_ms(10);
		r+=TCSMeasure();
 122:	bd df       	rcall	.-134    	; 0x9e <TCSMeasure>
 124:	6c 0d       	add	r22, r12
 126:	7d 1d       	adc	r23, r13
 128:	8e 1d       	adc	r24, r14
 12a:	9f 1d       	adc	r25, r15
		
		USART_TransmitNumber(((float)r/3.3),0);
 12c:	16 d1       	rcall	.+556    	; 0x35a <__floatunsisf>
 12e:	23 e3       	ldi	r18, 0x33	; 51
 130:	33 e3       	ldi	r19, 0x33	; 51
 132:	43 e5       	ldi	r20, 0x53	; 83
 134:	50 e4       	ldi	r21, 0x40	; 64
 136:	78 d0       	rcall	.+240    	; 0x228 <__divsf3>
 138:	df d0       	rcall	.+446    	; 0x2f8 <__fixsfsi>
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	39 d0       	rcall	.+114    	; 0x1b0 <USART_TransmitNumber>
		USART_Transmitchar(0x0D,0);
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	8d e0       	ldi	r24, 0x0D	; 13
 142:	28 d0       	rcall	.+80     	; 0x194 <USART_Transmitchar>
 144:	9f ef       	ldi	r25, 0xFF	; 255
 146:	21 ee       	ldi	r18, 0xE1	; 225
 148:	84 e0       	ldi	r24, 0x04	; 4
 14a:	91 50       	subi	r25, 0x01	; 1
 14c:	20 40       	sbci	r18, 0x00	; 0
 14e:	80 40       	sbci	r24, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <main+0x5e>
 152:	00 c0       	rjmp	.+0      	; 0x154 <main+0x68>
 154:	00 00       	nop
 156:	cb cf       	rjmp	.-106    	; 0xee <main+0x2>

00000158 <USART_Init>:
		 USART_Transmitchar(*str,n);
		 delay(10);
		 str++;
		// USART_Transmitchar(USART_Receive(1),0);
	 }
}
 158:	78 94       	sei
 15a:	66 23       	and	r22, r22
 15c:	79 f0       	breq	.+30     	; 0x17c <USART_Init+0x24>
 15e:	90 93 98 00 	sts	0x0098, r25
 162:	80 93 99 00 	sts	0x0099, r24
 166:	ea e9       	ldi	r30, 0x9A	; 154
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	88 61       	ori	r24, 0x18	; 24
 16e:	80 83       	st	Z, r24
 170:	ed e9       	ldi	r30, 0x9D	; 157
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	86 60       	ori	r24, 0x06	; 6
 178:	80 83       	st	Z, r24
 17a:	08 95       	ret
 17c:	90 93 90 00 	sts	0x0090, r25
 180:	89 b9       	out	0x09, r24	; 9
 182:	8a b1       	in	r24, 0x0a	; 10
 184:	88 61       	ori	r24, 0x18	; 24
 186:	8a b9       	out	0x0a, r24	; 10
 188:	e5 e9       	ldi	r30, 0x95	; 149
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	86 60       	ori	r24, 0x06	; 6
 190:	80 83       	st	Z, r24
 192:	08 95       	ret

00000194 <USART_Transmitchar>:
 194:	66 23       	and	r22, r22
 196:	41 f0       	breq	.+16     	; 0x1a8 <USART_Transmitchar+0x14>
 198:	eb e9       	ldi	r30, 0x9B	; 155
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	90 81       	ld	r25, Z
 19e:	95 ff       	sbrs	r25, 5
 1a0:	fd cf       	rjmp	.-6      	; 0x19c <USART_Transmitchar+0x8>
 1a2:	80 93 9c 00 	sts	0x009C, r24
 1a6:	08 95       	ret
 1a8:	5d 9b       	sbis	0x0b, 5	; 11
 1aa:	fe cf       	rjmp	.-4      	; 0x1a8 <USART_Transmitchar+0x14>
 1ac:	8c b9       	out	0x0c, r24	; 12
 1ae:	08 95       	ret

000001b0 <USART_TransmitNumber>:

void USART_TransmitNumber(long int num, uint8_t n)
{
 1b0:	bf 92       	push	r11
 1b2:	cf 92       	push	r12
 1b4:	df 92       	push	r13
 1b6:	ef 92       	push	r14
 1b8:	ff 92       	push	r15
 1ba:	0f 93       	push	r16
 1bc:	1f 93       	push	r17
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	6b 01       	movw	r12, r22
 1c4:	7c 01       	movw	r14, r24
 1c6:	c4 2f       	mov	r28, r20
	if(num<0)
 1c8:	99 23       	and	r25, r25
 1ca:	5c f4       	brge	.+22     	; 0x1e2 <USART_TransmitNumber+0x32>
	{
		USART_Transmitchar('-',n);
 1cc:	64 2f       	mov	r22, r20
 1ce:	8d e2       	ldi	r24, 0x2D	; 45
 1d0:	e1 df       	rcall	.-62     	; 0x194 <USART_Transmitchar>
		num=(-1)*num;
 1d2:	f0 94       	com	r15
 1d4:	e0 94       	com	r14
 1d6:	d0 94       	com	r13
 1d8:	c0 94       	com	r12
 1da:	c1 1c       	adc	r12, r1
 1dc:	d1 1c       	adc	r13, r1
 1de:	e1 1c       	adc	r14, r1
 1e0:	f1 1c       	adc	r15, r1
	}
	
	if(num >= 10){
 1e2:	8a e0       	ldi	r24, 0x0A	; 10
 1e4:	c8 16       	cp	r12, r24
 1e6:	d1 04       	cpc	r13, r1
 1e8:	e1 04       	cpc	r14, r1
 1ea:	f1 04       	cpc	r15, r1
 1ec:	7c f0       	brlt	.+30     	; 0x20c <USART_TransmitNumber+0x5c>
    USART_TransmitNumber(num/10,n);
 1ee:	c7 01       	movw	r24, r14
 1f0:	b6 01       	movw	r22, r12
 1f2:	2a e0       	ldi	r18, 0x0A	; 10
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	40 e0       	ldi	r20, 0x00	; 0
 1f8:	50 e0       	ldi	r21, 0x00	; 0
 1fa:	3d d1       	rcall	.+634    	; 0x476 <__divmodsi4>
 1fc:	69 01       	movw	r12, r18
 1fe:	7a 01       	movw	r14, r20
 200:	b6 2e       	mov	r11, r22
 202:	4c 2f       	mov	r20, r28
 204:	c7 01       	movw	r24, r14
 206:	b6 01       	movw	r22, r12
 208:	d3 df       	rcall	.-90     	; 0x1b0 <USART_TransmitNumber>
    num = num%10;
 20a:	cb 2c       	mov	r12, r11
  }
  USART_Transmitchar(num+'0',n); /* n is between 0 and 9 */
 20c:	6c 2f       	mov	r22, r28
 20e:	80 e3       	ldi	r24, 0x30	; 48
 210:	8c 0d       	add	r24, r12
 212:	c0 df       	rcall	.-128    	; 0x194 <USART_Transmitchar>
	
}
 214:	df 91       	pop	r29
 216:	cf 91       	pop	r28
 218:	1f 91       	pop	r17
 21a:	0f 91       	pop	r16
 21c:	ff 90       	pop	r15
 21e:	ef 90       	pop	r14
 220:	df 90       	pop	r13
 222:	cf 90       	pop	r12
 224:	bf 90       	pop	r11
 226:	08 95       	ret

00000228 <__divsf3>:
 228:	0c d0       	rcall	.+24     	; 0x242 <__divsf3x>
 22a:	eb c0       	rjmp	.+470    	; 0x402 <__fp_round>
 22c:	e3 d0       	rcall	.+454    	; 0x3f4 <__fp_pscB>
 22e:	40 f0       	brcs	.+16     	; 0x240 <__divsf3+0x18>
 230:	da d0       	rcall	.+436    	; 0x3e6 <__fp_pscA>
 232:	30 f0       	brcs	.+12     	; 0x240 <__divsf3+0x18>
 234:	21 f4       	brne	.+8      	; 0x23e <__divsf3+0x16>
 236:	5f 3f       	cpi	r21, 0xFF	; 255
 238:	19 f0       	breq	.+6      	; 0x240 <__divsf3+0x18>
 23a:	cc c0       	rjmp	.+408    	; 0x3d4 <__fp_inf>
 23c:	51 11       	cpse	r21, r1
 23e:	15 c1       	rjmp	.+554    	; 0x46a <__fp_szero>
 240:	cf c0       	rjmp	.+414    	; 0x3e0 <__fp_nan>

00000242 <__divsf3x>:
 242:	f0 d0       	rcall	.+480    	; 0x424 <__fp_split3>
 244:	98 f3       	brcs	.-26     	; 0x22c <__divsf3+0x4>

00000246 <__divsf3_pse>:
 246:	99 23       	and	r25, r25
 248:	c9 f3       	breq	.-14     	; 0x23c <__divsf3+0x14>
 24a:	55 23       	and	r21, r21
 24c:	b1 f3       	breq	.-20     	; 0x23a <__divsf3+0x12>
 24e:	95 1b       	sub	r25, r21
 250:	55 0b       	sbc	r21, r21
 252:	bb 27       	eor	r27, r27
 254:	aa 27       	eor	r26, r26
 256:	62 17       	cp	r22, r18
 258:	73 07       	cpc	r23, r19
 25a:	84 07       	cpc	r24, r20
 25c:	38 f0       	brcs	.+14     	; 0x26c <__divsf3_pse+0x26>
 25e:	9f 5f       	subi	r25, 0xFF	; 255
 260:	5f 4f       	sbci	r21, 0xFF	; 255
 262:	22 0f       	add	r18, r18
 264:	33 1f       	adc	r19, r19
 266:	44 1f       	adc	r20, r20
 268:	aa 1f       	adc	r26, r26
 26a:	a9 f3       	breq	.-22     	; 0x256 <__divsf3_pse+0x10>
 26c:	33 d0       	rcall	.+102    	; 0x2d4 <__divsf3_pse+0x8e>
 26e:	0e 2e       	mov	r0, r30
 270:	3a f0       	brmi	.+14     	; 0x280 <__divsf3_pse+0x3a>
 272:	e0 e8       	ldi	r30, 0x80	; 128
 274:	30 d0       	rcall	.+96     	; 0x2d6 <__divsf3_pse+0x90>
 276:	91 50       	subi	r25, 0x01	; 1
 278:	50 40       	sbci	r21, 0x00	; 0
 27a:	e6 95       	lsr	r30
 27c:	00 1c       	adc	r0, r0
 27e:	ca f7       	brpl	.-14     	; 0x272 <__divsf3_pse+0x2c>
 280:	29 d0       	rcall	.+82     	; 0x2d4 <__divsf3_pse+0x8e>
 282:	fe 2f       	mov	r31, r30
 284:	27 d0       	rcall	.+78     	; 0x2d4 <__divsf3_pse+0x8e>
 286:	66 0f       	add	r22, r22
 288:	77 1f       	adc	r23, r23
 28a:	88 1f       	adc	r24, r24
 28c:	bb 1f       	adc	r27, r27
 28e:	26 17       	cp	r18, r22
 290:	37 07       	cpc	r19, r23
 292:	48 07       	cpc	r20, r24
 294:	ab 07       	cpc	r26, r27
 296:	b0 e8       	ldi	r27, 0x80	; 128
 298:	09 f0       	breq	.+2      	; 0x29c <__divsf3_pse+0x56>
 29a:	bb 0b       	sbc	r27, r27
 29c:	80 2d       	mov	r24, r0
 29e:	bf 01       	movw	r22, r30
 2a0:	ff 27       	eor	r31, r31
 2a2:	93 58       	subi	r25, 0x83	; 131
 2a4:	5f 4f       	sbci	r21, 0xFF	; 255
 2a6:	2a f0       	brmi	.+10     	; 0x2b2 <__divsf3_pse+0x6c>
 2a8:	9e 3f       	cpi	r25, 0xFE	; 254
 2aa:	51 05       	cpc	r21, r1
 2ac:	68 f0       	brcs	.+26     	; 0x2c8 <__divsf3_pse+0x82>
 2ae:	92 c0       	rjmp	.+292    	; 0x3d4 <__fp_inf>
 2b0:	dc c0       	rjmp	.+440    	; 0x46a <__fp_szero>
 2b2:	5f 3f       	cpi	r21, 0xFF	; 255
 2b4:	ec f3       	brlt	.-6      	; 0x2b0 <__divsf3_pse+0x6a>
 2b6:	98 3e       	cpi	r25, 0xE8	; 232
 2b8:	dc f3       	brlt	.-10     	; 0x2b0 <__divsf3_pse+0x6a>
 2ba:	86 95       	lsr	r24
 2bc:	77 95       	ror	r23
 2be:	67 95       	ror	r22
 2c0:	b7 95       	ror	r27
 2c2:	f7 95       	ror	r31
 2c4:	9f 5f       	subi	r25, 0xFF	; 255
 2c6:	c9 f7       	brne	.-14     	; 0x2ba <__divsf3_pse+0x74>
 2c8:	88 0f       	add	r24, r24
 2ca:	91 1d       	adc	r25, r1
 2cc:	96 95       	lsr	r25
 2ce:	87 95       	ror	r24
 2d0:	97 f9       	bld	r25, 7
 2d2:	08 95       	ret
 2d4:	e1 e0       	ldi	r30, 0x01	; 1
 2d6:	66 0f       	add	r22, r22
 2d8:	77 1f       	adc	r23, r23
 2da:	88 1f       	adc	r24, r24
 2dc:	bb 1f       	adc	r27, r27
 2de:	62 17       	cp	r22, r18
 2e0:	73 07       	cpc	r23, r19
 2e2:	84 07       	cpc	r24, r20
 2e4:	ba 07       	cpc	r27, r26
 2e6:	20 f0       	brcs	.+8      	; 0x2f0 <__divsf3_pse+0xaa>
 2e8:	62 1b       	sub	r22, r18
 2ea:	73 0b       	sbc	r23, r19
 2ec:	84 0b       	sbc	r24, r20
 2ee:	ba 0b       	sbc	r27, r26
 2f0:	ee 1f       	adc	r30, r30
 2f2:	88 f7       	brcc	.-30     	; 0x2d6 <__divsf3_pse+0x90>
 2f4:	e0 95       	com	r30
 2f6:	08 95       	ret

000002f8 <__fixsfsi>:
 2f8:	04 d0       	rcall	.+8      	; 0x302 <__fixunssfsi>
 2fa:	68 94       	set
 2fc:	b1 11       	cpse	r27, r1
 2fe:	b5 c0       	rjmp	.+362    	; 0x46a <__fp_szero>
 300:	08 95       	ret

00000302 <__fixunssfsi>:
 302:	98 d0       	rcall	.+304    	; 0x434 <__fp_splitA>
 304:	88 f0       	brcs	.+34     	; 0x328 <__fixunssfsi+0x26>
 306:	9f 57       	subi	r25, 0x7F	; 127
 308:	90 f0       	brcs	.+36     	; 0x32e <__fixunssfsi+0x2c>
 30a:	b9 2f       	mov	r27, r25
 30c:	99 27       	eor	r25, r25
 30e:	b7 51       	subi	r27, 0x17	; 23
 310:	a0 f0       	brcs	.+40     	; 0x33a <__fixunssfsi+0x38>
 312:	d1 f0       	breq	.+52     	; 0x348 <__fixunssfsi+0x46>
 314:	66 0f       	add	r22, r22
 316:	77 1f       	adc	r23, r23
 318:	88 1f       	adc	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	1a f0       	brmi	.+6      	; 0x324 <__fixunssfsi+0x22>
 31e:	ba 95       	dec	r27
 320:	c9 f7       	brne	.-14     	; 0x314 <__fixunssfsi+0x12>
 322:	12 c0       	rjmp	.+36     	; 0x348 <__fixunssfsi+0x46>
 324:	b1 30       	cpi	r27, 0x01	; 1
 326:	81 f0       	breq	.+32     	; 0x348 <__fixunssfsi+0x46>
 328:	9f d0       	rcall	.+318    	; 0x468 <__fp_zero>
 32a:	b1 e0       	ldi	r27, 0x01	; 1
 32c:	08 95       	ret
 32e:	9c c0       	rjmp	.+312    	; 0x468 <__fp_zero>
 330:	67 2f       	mov	r22, r23
 332:	78 2f       	mov	r23, r24
 334:	88 27       	eor	r24, r24
 336:	b8 5f       	subi	r27, 0xF8	; 248
 338:	39 f0       	breq	.+14     	; 0x348 <__fixunssfsi+0x46>
 33a:	b9 3f       	cpi	r27, 0xF9	; 249
 33c:	cc f3       	brlt	.-14     	; 0x330 <__fixunssfsi+0x2e>
 33e:	86 95       	lsr	r24
 340:	77 95       	ror	r23
 342:	67 95       	ror	r22
 344:	b3 95       	inc	r27
 346:	d9 f7       	brne	.-10     	; 0x33e <__fixunssfsi+0x3c>
 348:	3e f4       	brtc	.+14     	; 0x358 <__fixunssfsi+0x56>
 34a:	90 95       	com	r25
 34c:	80 95       	com	r24
 34e:	70 95       	com	r23
 350:	61 95       	neg	r22
 352:	7f 4f       	sbci	r23, 0xFF	; 255
 354:	8f 4f       	sbci	r24, 0xFF	; 255
 356:	9f 4f       	sbci	r25, 0xFF	; 255
 358:	08 95       	ret

0000035a <__floatunsisf>:
 35a:	e8 94       	clt
 35c:	09 c0       	rjmp	.+18     	; 0x370 <__floatsisf+0x12>

0000035e <__floatsisf>:
 35e:	97 fb       	bst	r25, 7
 360:	3e f4       	brtc	.+14     	; 0x370 <__floatsisf+0x12>
 362:	90 95       	com	r25
 364:	80 95       	com	r24
 366:	70 95       	com	r23
 368:	61 95       	neg	r22
 36a:	7f 4f       	sbci	r23, 0xFF	; 255
 36c:	8f 4f       	sbci	r24, 0xFF	; 255
 36e:	9f 4f       	sbci	r25, 0xFF	; 255
 370:	99 23       	and	r25, r25
 372:	a9 f0       	breq	.+42     	; 0x39e <__floatsisf+0x40>
 374:	f9 2f       	mov	r31, r25
 376:	96 e9       	ldi	r25, 0x96	; 150
 378:	bb 27       	eor	r27, r27
 37a:	93 95       	inc	r25
 37c:	f6 95       	lsr	r31
 37e:	87 95       	ror	r24
 380:	77 95       	ror	r23
 382:	67 95       	ror	r22
 384:	b7 95       	ror	r27
 386:	f1 11       	cpse	r31, r1
 388:	f8 cf       	rjmp	.-16     	; 0x37a <__floatsisf+0x1c>
 38a:	fa f4       	brpl	.+62     	; 0x3ca <__floatsisf+0x6c>
 38c:	bb 0f       	add	r27, r27
 38e:	11 f4       	brne	.+4      	; 0x394 <__floatsisf+0x36>
 390:	60 ff       	sbrs	r22, 0
 392:	1b c0       	rjmp	.+54     	; 0x3ca <__floatsisf+0x6c>
 394:	6f 5f       	subi	r22, 0xFF	; 255
 396:	7f 4f       	sbci	r23, 0xFF	; 255
 398:	8f 4f       	sbci	r24, 0xFF	; 255
 39a:	9f 4f       	sbci	r25, 0xFF	; 255
 39c:	16 c0       	rjmp	.+44     	; 0x3ca <__floatsisf+0x6c>
 39e:	88 23       	and	r24, r24
 3a0:	11 f0       	breq	.+4      	; 0x3a6 <__floatsisf+0x48>
 3a2:	96 e9       	ldi	r25, 0x96	; 150
 3a4:	11 c0       	rjmp	.+34     	; 0x3c8 <__floatsisf+0x6a>
 3a6:	77 23       	and	r23, r23
 3a8:	21 f0       	breq	.+8      	; 0x3b2 <__floatsisf+0x54>
 3aa:	9e e8       	ldi	r25, 0x8E	; 142
 3ac:	87 2f       	mov	r24, r23
 3ae:	76 2f       	mov	r23, r22
 3b0:	05 c0       	rjmp	.+10     	; 0x3bc <__floatsisf+0x5e>
 3b2:	66 23       	and	r22, r22
 3b4:	71 f0       	breq	.+28     	; 0x3d2 <__floatsisf+0x74>
 3b6:	96 e8       	ldi	r25, 0x86	; 134
 3b8:	86 2f       	mov	r24, r22
 3ba:	70 e0       	ldi	r23, 0x00	; 0
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	2a f0       	brmi	.+10     	; 0x3ca <__floatsisf+0x6c>
 3c0:	9a 95       	dec	r25
 3c2:	66 0f       	add	r22, r22
 3c4:	77 1f       	adc	r23, r23
 3c6:	88 1f       	adc	r24, r24
 3c8:	da f7       	brpl	.-10     	; 0x3c0 <__floatsisf+0x62>
 3ca:	88 0f       	add	r24, r24
 3cc:	96 95       	lsr	r25
 3ce:	87 95       	ror	r24
 3d0:	97 f9       	bld	r25, 7
 3d2:	08 95       	ret

000003d4 <__fp_inf>:
 3d4:	97 f9       	bld	r25, 7
 3d6:	9f 67       	ori	r25, 0x7F	; 127
 3d8:	80 e8       	ldi	r24, 0x80	; 128
 3da:	70 e0       	ldi	r23, 0x00	; 0
 3dc:	60 e0       	ldi	r22, 0x00	; 0
 3de:	08 95       	ret

000003e0 <__fp_nan>:
 3e0:	9f ef       	ldi	r25, 0xFF	; 255
 3e2:	80 ec       	ldi	r24, 0xC0	; 192
 3e4:	08 95       	ret

000003e6 <__fp_pscA>:
 3e6:	00 24       	eor	r0, r0
 3e8:	0a 94       	dec	r0
 3ea:	16 16       	cp	r1, r22
 3ec:	17 06       	cpc	r1, r23
 3ee:	18 06       	cpc	r1, r24
 3f0:	09 06       	cpc	r0, r25
 3f2:	08 95       	ret

000003f4 <__fp_pscB>:
 3f4:	00 24       	eor	r0, r0
 3f6:	0a 94       	dec	r0
 3f8:	12 16       	cp	r1, r18
 3fa:	13 06       	cpc	r1, r19
 3fc:	14 06       	cpc	r1, r20
 3fe:	05 06       	cpc	r0, r21
 400:	08 95       	ret

00000402 <__fp_round>:
 402:	09 2e       	mov	r0, r25
 404:	03 94       	inc	r0
 406:	00 0c       	add	r0, r0
 408:	11 f4       	brne	.+4      	; 0x40e <__fp_round+0xc>
 40a:	88 23       	and	r24, r24
 40c:	52 f0       	brmi	.+20     	; 0x422 <__fp_round+0x20>
 40e:	bb 0f       	add	r27, r27
 410:	40 f4       	brcc	.+16     	; 0x422 <__fp_round+0x20>
 412:	bf 2b       	or	r27, r31
 414:	11 f4       	brne	.+4      	; 0x41a <__fp_round+0x18>
 416:	60 ff       	sbrs	r22, 0
 418:	04 c0       	rjmp	.+8      	; 0x422 <__fp_round+0x20>
 41a:	6f 5f       	subi	r22, 0xFF	; 255
 41c:	7f 4f       	sbci	r23, 0xFF	; 255
 41e:	8f 4f       	sbci	r24, 0xFF	; 255
 420:	9f 4f       	sbci	r25, 0xFF	; 255
 422:	08 95       	ret

00000424 <__fp_split3>:
 424:	57 fd       	sbrc	r21, 7
 426:	90 58       	subi	r25, 0x80	; 128
 428:	44 0f       	add	r20, r20
 42a:	55 1f       	adc	r21, r21
 42c:	59 f0       	breq	.+22     	; 0x444 <__fp_splitA+0x10>
 42e:	5f 3f       	cpi	r21, 0xFF	; 255
 430:	71 f0       	breq	.+28     	; 0x44e <__fp_splitA+0x1a>
 432:	47 95       	ror	r20

00000434 <__fp_splitA>:
 434:	88 0f       	add	r24, r24
 436:	97 fb       	bst	r25, 7
 438:	99 1f       	adc	r25, r25
 43a:	61 f0       	breq	.+24     	; 0x454 <__fp_splitA+0x20>
 43c:	9f 3f       	cpi	r25, 0xFF	; 255
 43e:	79 f0       	breq	.+30     	; 0x45e <__fp_splitA+0x2a>
 440:	87 95       	ror	r24
 442:	08 95       	ret
 444:	12 16       	cp	r1, r18
 446:	13 06       	cpc	r1, r19
 448:	14 06       	cpc	r1, r20
 44a:	55 1f       	adc	r21, r21
 44c:	f2 cf       	rjmp	.-28     	; 0x432 <__fp_split3+0xe>
 44e:	46 95       	lsr	r20
 450:	f1 df       	rcall	.-30     	; 0x434 <__fp_splitA>
 452:	08 c0       	rjmp	.+16     	; 0x464 <__fp_splitA+0x30>
 454:	16 16       	cp	r1, r22
 456:	17 06       	cpc	r1, r23
 458:	18 06       	cpc	r1, r24
 45a:	99 1f       	adc	r25, r25
 45c:	f1 cf       	rjmp	.-30     	; 0x440 <__fp_splitA+0xc>
 45e:	86 95       	lsr	r24
 460:	71 05       	cpc	r23, r1
 462:	61 05       	cpc	r22, r1
 464:	08 94       	sec
 466:	08 95       	ret

00000468 <__fp_zero>:
 468:	e8 94       	clt

0000046a <__fp_szero>:
 46a:	bb 27       	eor	r27, r27
 46c:	66 27       	eor	r22, r22
 46e:	77 27       	eor	r23, r23
 470:	cb 01       	movw	r24, r22
 472:	97 f9       	bld	r25, 7
 474:	08 95       	ret

00000476 <__divmodsi4>:
 476:	05 2e       	mov	r0, r21
 478:	97 fb       	bst	r25, 7
 47a:	16 f4       	brtc	.+4      	; 0x480 <__divmodsi4+0xa>
 47c:	00 94       	com	r0
 47e:	0f d0       	rcall	.+30     	; 0x49e <__negsi2>
 480:	57 fd       	sbrc	r21, 7
 482:	05 d0       	rcall	.+10     	; 0x48e <__divmodsi4_neg2>
 484:	14 d0       	rcall	.+40     	; 0x4ae <__udivmodsi4>
 486:	07 fc       	sbrc	r0, 7
 488:	02 d0       	rcall	.+4      	; 0x48e <__divmodsi4_neg2>
 48a:	46 f4       	brtc	.+16     	; 0x49c <__divmodsi4_exit>
 48c:	08 c0       	rjmp	.+16     	; 0x49e <__negsi2>

0000048e <__divmodsi4_neg2>:
 48e:	50 95       	com	r21
 490:	40 95       	com	r20
 492:	30 95       	com	r19
 494:	21 95       	neg	r18
 496:	3f 4f       	sbci	r19, 0xFF	; 255
 498:	4f 4f       	sbci	r20, 0xFF	; 255
 49a:	5f 4f       	sbci	r21, 0xFF	; 255

0000049c <__divmodsi4_exit>:
 49c:	08 95       	ret

0000049e <__negsi2>:
 49e:	90 95       	com	r25
 4a0:	80 95       	com	r24
 4a2:	70 95       	com	r23
 4a4:	61 95       	neg	r22
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	8f 4f       	sbci	r24, 0xFF	; 255
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	08 95       	ret

000004ae <__udivmodsi4>:
 4ae:	a1 e2       	ldi	r26, 0x21	; 33
 4b0:	1a 2e       	mov	r1, r26
 4b2:	aa 1b       	sub	r26, r26
 4b4:	bb 1b       	sub	r27, r27
 4b6:	fd 01       	movw	r30, r26
 4b8:	0d c0       	rjmp	.+26     	; 0x4d4 <__udivmodsi4_ep>

000004ba <__udivmodsi4_loop>:
 4ba:	aa 1f       	adc	r26, r26
 4bc:	bb 1f       	adc	r27, r27
 4be:	ee 1f       	adc	r30, r30
 4c0:	ff 1f       	adc	r31, r31
 4c2:	a2 17       	cp	r26, r18
 4c4:	b3 07       	cpc	r27, r19
 4c6:	e4 07       	cpc	r30, r20
 4c8:	f5 07       	cpc	r31, r21
 4ca:	20 f0       	brcs	.+8      	; 0x4d4 <__udivmodsi4_ep>
 4cc:	a2 1b       	sub	r26, r18
 4ce:	b3 0b       	sbc	r27, r19
 4d0:	e4 0b       	sbc	r30, r20
 4d2:	f5 0b       	sbc	r31, r21

000004d4 <__udivmodsi4_ep>:
 4d4:	66 1f       	adc	r22, r22
 4d6:	77 1f       	adc	r23, r23
 4d8:	88 1f       	adc	r24, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	1a 94       	dec	r1
 4de:	69 f7       	brne	.-38     	; 0x4ba <__udivmodsi4_loop>
 4e0:	60 95       	com	r22
 4e2:	70 95       	com	r23
 4e4:	80 95       	com	r24
 4e6:	90 95       	com	r25
 4e8:	9b 01       	movw	r18, r22
 4ea:	ac 01       	movw	r20, r24
 4ec:	bd 01       	movw	r22, r26
 4ee:	cf 01       	movw	r24, r30
 4f0:	08 95       	ret

000004f2 <_exit>:
 4f2:	f8 94       	cli

000004f4 <__stop_program>:
 4f4:	ff cf       	rjmp	.-2      	; 0x4f4 <__stop_program>
